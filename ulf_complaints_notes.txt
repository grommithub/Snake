Done:
✓	Stick resources in game	
✓	Pass simple types by value
✓	Put timer in game
✓	Make running the game a single function
✓	Stick rng in constructor
✓	Update should return void
✓	Ditch render queue and make render things const
✓	Render rect entry breaking law of demeter
	Game update should be simpler and with fewer branches/scopes
	Don't take argument in TranslateKeyCode by const value
	render_rect_entry depending on some global value
	Const local objects
	struct Window fails to protect the pointer that it owns
	This struct clearly has an invariant so it should 
		a) be a class and 
		b) have an interface to protect the invariant
	
In progress:
	Don't use nested loops
	Always make methods const and noexcept

Backlog:
	Motivate decisions instead of citing source of inspiration
	Don't bother with performance


	I would recommend std::set_difference for finding free space
	Constructor should throw


	Can throw in destructor
	Default constructors should be exception safe
	Throwable constructors should be custom constructors with arguments


	Const correct & noexcept stuff in game






